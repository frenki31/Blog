@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<BeReal.ViewModels.PostViewModel>
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager;
@{
    ViewData["Title"] = "Posts";
    var authUser = new ApplicationUser();
    authUser = userManager.Users.FirstOrDefault(X => X.UserName == User.Identity!.Name);
    var authUserRole = await userManager.GetRolesAsync(authUser!);
}

<div class="container-fluid">
    <a class="btn btn-primary mb-1" asp-action="Create" asp-controller="Post">Create Post</a>
    <div class="card">
        <div class="card-header bg-primary">
            <h4 class="card-title text-white">
                List of Posts
            </h4>
        </div>
        <div class="card-body" style="background-color:lightgray">
            @foreach (var post in Model)
            {
                <div class="rounded mb-4 bg-white p-4">
                    <div class="row">
                        <div class="col-2 d-flex justify-content-center flex-column">
                            @if (post.Image == null)
                            {
                                <img class="img-fluid" src="~/images/default_image.png" style="object-fit:cover; height:100%; width:100%" />
                            }
                            else
                            {
                                <img class="img-fluid" src="~/images/@post.Image" style="object-fit:cover; height:100%; width:100%" />
                            }
                        </div>
                        <div class="col-5 d-flex justify-content-center flex-column">
                            <h4 class="text-primary fw-bold" style="font-size: 1.5rem; font-weight: bolder">@post.Title</h4>
                            <div>
                                <i class="fa-regular fa-calendar"></i>
                                <span>Last updated: <b>@post.publicationDate</b></span>
                            </div>
                            <div>
                                <i class="fa-regular fa-comment"></i>
                                <span>Comments: <b>@post.MainComments!.Count</b></span>
                            </div>
                            <div>
                                @if (post.Approved == false)
                                {
                                    <i class="fa-regular fa-thumbs-down"></i>
                                    <span>Status: <b>Not Approved</b></span>
                                }
                                else
                                {
                                    <i class="fa-regular fa-thumbs-up"></i>
                                    <span>Status: <b>Approved</b></span>
                                }
                            </div>
                            <div>
                                @if (post.Document != null)
                                {
                                    <i class="fa-regular fa-file"></i>
                                    <span>Document: <b>@post.Document.FileName</b>
                                        <form method="post" asp-action="Download" asp-controller="Post" asp-route-id="@post.Document.Id">
                                            <input type="submit" class="btn btn-primary" value="Download"/>
                                        </form>
                                    </span>
                                }
                                else
                                {
                                    <i class="fa-regular fa-file"></i>
                                    <span>Document: <b>Not Found</b></span>
                                }
                            </div>
                        </div>
                        <div class="col-5 text-right d-flex justify-content-center flex-column">
                            <div class="d-flex justify-content-end">
                                <h4 class="fw-bold align-top" style="font-size: 1rem">@post.Author</h4>
                            </div>
                            <div class="d-flex justify-content-end align-items-center">
                                <a class="btn btn-warning" asp-action="Edit" asp-controller="Post" asp-area="Admin" asp-route-id="@post.Id">Edit</a> |
                                <form asp-action="Delete" asp-controller="Post" asp-area="Admin" asp-route-id="@post.Id" method="post" onsubmit="return confirm('Do you want to delete this post?')">
                                    <button type="submit" class="btn btn-danger">Delete</button>
                                </form>
                                @if (authUserRole[0] == "Admin")
                                {
                                    if (post.Approved == false)
                                    {
                                        <form asp-action="Approve" asp-controller="Post" asp-area="Admin" asp-route-id="@post.Id" method="post">
                                            |<button type="submit" class="btn btn-secondary">Approve</button>
                                        </form>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="card-footer">
            Page @(Model?.PageCount < Model?.PageNumber ? 0 : Model!.PageNumber) of @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index",
                     new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
                     new PagedListRenderOptions()
            {
                ContainerDivClasses = new List<string> { "d-flex justify-content-start mb-4" },
                UlElementClasses = new List<string> { "pagination" },
                LiElementClasses = new List<string> { "btn btn-primary mx-1 text-uppercase" },
                ActiveLiElementClass = "active",
            })
        </div>
    </div>
</div>