@model BlogPostViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager;
@{
    ViewData["Title"] = "Post";
    ViewData["Description"] = Model.ShortDescription;
    ViewData["Keywords"] = $"{Model.Tags?.Replace(",","")} {Model.Category}";
    string imageUrl = "";
    if (Model.ImageUrl == null)
    {
        imageUrl = "assets/img/post-bg.jpg";
    }
    else
    {
        imageUrl = "/images/" + Model.ImageUrl;
    }
    var authUser = new ApplicationUser();
    authUser = userManager.Users.FirstOrDefault(x => x.UserName == User.Identity!.Name);
}
@{
    await Html.RenderPartialAsync("_Navbar");
}
<!-- Page Header-->
<header class="masthead" style="background-image: url('@imageUrl')">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="post-heading">
                    <h1>@Model.Title</h1>
                    <h2 class="subheading">@Model.ShortDescription</h2>
                    <span class="meta">
                        Posted by
                        <a asp-action="Profile" asp-controller="Home" asp-route-name="">@Model.Author</a>
                        on @Model.PublicationDate.ToShortDateString()
                    </span>
                </div>
            </div>
        </div>
    </div>
</header>
<!-- Post Content-->
<article class="mb-4">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                @Html.Raw(Model.Description)
            </div>
        </div>
    </div>
</article>
<div class="d-flex justify-content-center">
    @if (User.Identity!.IsAuthenticated)
    {
        @foreach (var comment in Model.Comments!.Where(c => c.ParentCommentId == null))
        {
            <div class="comment">
                <h5>@comment.User!.UserName</h5>
                <p>@comment.Message</p>

                @foreach (var reply in Model.Comments!.Where(c => c.ParentCommentId == comment.CommentId))
                {
                    <div class="reply">
                        <h5>@reply.User!.UserName</h5>
                        <p>@reply.Message</p>
                    </div>
                }

                <form asp-action="Reply" method="post">
                    <input type="hidden" name="commentId" value="@comment.CommentId" />
                    <textarea name="content"></textarea>
                    <button type="submit">Reply</button>
                </form>
            </div>
        }


    }
</div>
@{
    await Html.RenderPartialAsync("_Footer");
}


